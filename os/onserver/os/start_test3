#!/bin/bash

# Created by: Steve Shilling
# Created Date: 17th March 2018

# Script to start a docker image for a student
# Script deals with Scenario 3 - In ability to write to logs, directory and files readonly

if (( $# < 3 ))
then
	echo "SYNTAX: $0 <user> <testname> <serverNIC>" 1>&2
	exit 1
fi

user=$1
testcase=$2
nic=$3

# Which port to use, change these values according to your system
start_port=1030
end_port=65000
numports=5

# Do not change anything below this
assigned=0
counter=$start_port
badports=$(netstat -atn | awk '{print $4}' | sed 's/^.*://' | grep '^[0-9][0-9]*' | sort | uniq)
# useports = ssh, web, sql, amq
useports=""
ip=$(ifconfig | sed -n "/${nic}/,/Link encap/p" | grep 'inet addr' | awk '{print $2}' | sed 's/^.*://')
while (( $assigned < $numports )) && (( $counter < $end_port ))
do
	#echo -n "."
	echo "Checking port $counter" 1>&2
	if echo "$badports" | grep "$counter" >/dev/null 2>&1
	then
		(( counter = counter + 1 ))
		continue
	fi
	#if ! nc -z -n $ip $counter >/dev/null 2>&1
	#then
		useports="$useports,$counter"
		(( assigned=assigned+1 ))
	#fi
	(( counter = counter + 1 ))
done
echo ""
useports=$(echo "$useports" | sed 's/^,//')
# echo $useports
ssh=$(echo "$useports" | awk -F, '{print $1}')
web=$(echo "$useports" | awk -F, '{print $2}')
web2=$(echo "$useports" | awk -F, '{print $3}')
localsql=$(echo "$useports" | awk -F, '{print $4}')
amqadmin=$(echo "$useports" | awk -F, '{print $5}')
SSHIP=$(ifconfig | sed -n "/${nic}/,/RX/p" | grep inet | egrep -o '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' | head -1)

# Run MySQL
# docker run --name ${user}_${testcase}_mysql -p ${localsql}:3306 -p ${sql}:22 -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:5.6
docker run --name ${user}_${testcase}_mysql -p ${localsql}:3306 -e MYSQL_ROOT_PASSWORD=my-secret-pw -d localhost:5000/mysql >/dev/null
sqlcmd=$(find . -name sqlschema.sh)
sleep 10
${sqlcmd} ${localsql}

# Run ActiveMQ
docker run --name=${user}_${testcase}_activemq -d \
                -e 'ACTIVEMQ_REMOVE_DEFAULT_ACCOUNT=true' \
                -e 'ACTIVEMQ_ADMIN_LOGIN=admin' -e 'ACTIVEMQ_ADMIN_PASSWORD=admin' \
                -e 'ACTIVEMQ_MIN_MEMORY=1024' -e  'ACTIVEMQ_MAX_MEMORY=4096' \
								-p ${amqadmin}:8161\
								localhost:5000/activemq >/dev/null
#                webcenter/activemq:5.14.3

# Run the app server
docker run -itd -h ${user}.${testcase} -e APPVERSION=1.0.0 -v /var/testresults:/var/testresults --name ${user}_${testcase} -p ${web2}:8080 -p ${web}:80 -p ${ssh}:22 --link ${user}_${testcase}_mysql:mysql.server --link ${user}_${testcase}_activemq:activemq.server localhost:5000/citi/test >/dev/null

# Stop trade app running
docker cp ../docker/completed3 ${user}_${testcase}:/bin/completed
docker exec -t ${user}_${testcase} chmod 700 /bin/completed
docker exec -t ${user}_${testcase} chown root:root /bin/completed
docker exec -it ${user}_${testcase} mkdir /var/log/trade-app >/dev/null 2>&1
docker exec -it ${user}_${testcase} touch /var/log/trade-app/server.stdout /var/log/trade-app/server.stderr /var/log/trade-app/injector.stdout /var/log/trade-app/injector.stderr
docker exec -it ${user}_${testcase} chmod 507 /var/log/trade-app
docker exec -it ${user}_${testcase} bash -c 'chmod 004 /var/log/trade-app/*'
docker exec -it ${user}_${testcase} bash -c '/usr/sbin/service trade-app stop 2>/dev/null'
docker exec -it ${user}_${testcase} bash -c '/usr/sbin/service trade-app start 2>/dev/null'

echo "Using the following ports;"
echo "SSH = ${ssh}"
echo "WEB = ${web}"
echo "WEB8080 = ${web2}"
echo "SQL = ${localsql}"
echo "AMQADMIN = ${amqadmin}"
echo "VM = ${user}_${testcase}"
echo "SSHIP = $SSHIP"
# Note: If this is hosted outside of the company SSHIP will need to be overridden on the Web UI with the public IP address of the host
